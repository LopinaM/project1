{"version":3,"file":"static/js/0.4c48681e.chunk.js","mappings":"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","sources":["webpack://project1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://project1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.js","components/Profile/MyPosts/AddPostForm/AddPostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.module.css","webpack://project1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yucwS\"};","import s from './Post.module.css';\n\nfunction Post(props) {\n    return (\n        <div className={s.posts}>\n            <div className={s.item}>\n                <img src='https://cdn121.picsart.com/212677724003202.jpg' />\n                {props.message}\n                <div>\n                    <span>like</span>{props.likesCount}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, requiredField } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea} name=\"newPostText\" placeholder='Post message'\n                validate={[requiredField, maxLength10]} />\n            <div>\n                <button >Add Post</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({ form: \"ProfileAddNewPostForm\" })(AddPostForm);","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Posts/Post';\nimport { Field, reduxForm } from \"redux-form\";\nimport AddPostForm from './AddPostForm/AddPostForm';\n\nfunction MyPosts(props) {\n    // const MyPosts = React.memo(props => {\n    console.log(\"RENDER YO\");\n\n    let postsElement =\n        props.postData.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount} />);\n\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>my posts</h3>\n            <AddPostForm onSubmit={onAddPost} />\n            <div className={s.posts}>\n                {postsElement}\n            </div>\n        </div>\n    )\n}\n// );\n\nexport default MyPosts;\n\n\n","import React from 'react';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        postData: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)); }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"ProfileInfo_img__+4bLE\",\"descriphionBlock\":\"ProfileInfo_descriphionBlock__9oI37\",\"descriphionBlock2\":\"ProfileInfo_descriphionBlock2__exHYx\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QU8TO\",\"contact\":\"ProfileInfo_contact__sQB8W\"};","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatus = (props) => {\n    const [moodEdit, setMoodEdit] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setMoodEdit(true);\n    }\n\n    const deactivateEditMode = () => {\n        setMoodEdit(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {moodEdit\n                ? (\n                    <div>\n                        <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} value={status} />\n                    </div>\n                )\n                : (\n                    <div>\n                        <b>Status: </b> <span onDoubleClick={activateEditMode}>{status || \"-------\"}</span>\n                        {/* <span onDoubleClick={activateEditMode}>{status || \"-------\"}</span> */}\n                    </div>\n                )\n            }\n        </div>\n    );\n};\n\nexport default ProfileStatus;\n\n\n","import React from \"react\";\nimport s from './ProfileInfo.module.css';\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\nimport { reduxForm } from \"redux-form\";\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n    return <form onSubmit={handleSubmit}>\n        <div><button>save</button></div>\n        {error && <div className={style.formSummaryError}>\n            {error}\n        </div>\n        }\n        <div>\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\n        </div>\n\n        <div>\n            <b>My professional skills</b>:\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n        </div>\n\n\n        <div>\n            <b>About me</b>:\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\n        </div>\n        {/* <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={s.contact}>\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\n                </div>\n            })}\n        </div> */}\n    </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\n\nexport default ProfileDataFormReduxForm; ","import Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatus from './ProfileStatus';\nimport userPhoto from './../../../assets/images/user.jpg';\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport React, { useState } from 'react';\n\nfunction ProfileInfo({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader />\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        );\n    }\n\n    return (\n        <div className={s.content}>\n            {/* <div>\n                <img src='https://cdn1.ozone.ru/s3/multimedia-0/6464071788.jpg' className={s.img} />\n            </div> */}\n            <div className={s.descriphionBlock}>\n                <div>\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n\n                    {editMode\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n                        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\n\n                </div>\n                {/* <div className={s.descriphionBlock2}>\n                    {profile.fullName}\n                </div>\n                <div>\n                    {profile.aboutMe}\n                </div> */}\n                <ProfileStatus status={status} updateStatus={updateStatus} />\n            </div>\n        </div>\n    )\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n    return <div>\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\n        <div>\n            <b>Full name</b>: {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {profile.lookingForAJob &&\n            <div>\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\n            </div>\n        }\n        {/* \n        <div>\n            <b>About me</b>: {profile.aboutMe}\n        </div> */}\n        {/* <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n            })}\n        </div> */}\n    </div>\n}\n\n\nconst Contact = ({ contactTitle, contactValue }) => {\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\n\nfunction Profile(props) {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo savePhoto={props.savePhoto}\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                saveProfile={props.saveProfile} />\n            <MyPostsContainer />\n\n        </div>\n    )\n}\n\nexport default Profile;","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { setUserProfile } from '../../redux/profile-reducer';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nexport function withRouter(Children) {\n    return (props) => {\n\n        const match = { params: useParams() };\n        return <Children {...props} match={match} />\n    }\n}\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                isOwner={!this.props.match.params.userId}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n                savePhoto={this.props.savePhoto} />\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n\n\n\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    let redirectComponent = (props) => {\n        if (!props.isAuth) return <Navigate to={'/login'} />\n        return <Component {...props} />\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(redirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n\n"],"names":["props","_jsx","className","s","posts","children","_jsxs","item","src","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","console","log","postsElement","postData","map","post","Post","id","AddPostForm","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","moodEdit","setMoodEdit","useState","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","onDoubleClick","activateEditMode","_ref","profile","error","style","formSummaryError","createField","Input","type","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","savePhoto","saveProfile","editMode","setEditMode","content","descriphionBlock","photos","large","userPhoto","mainPhoto","target","files","length","ProfileDataForm","initialValues","formData","then","ProfileStatus","Preloader","ProfileInfo","MyPostsContainer","withRouter","Children","match","params","useParams","ProfileContainer","React","refreshProfile","userId","this","authorizedUserId","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","Profile","compose","auth","isAuth","withAuthRedirect","mapStateToPropsForRedirect","Component","Navigate","to"],"sourceRoot":""}