{"version":3,"file":"static/js/719.bff9051b.chunk.js","mappings":"uJACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAA0I,wBAA1I,EAA6K,0B,uBCW7K,QATA,SAAoBA,GAChB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,kFACTD,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,GAAI,YAAcR,EAAMS,GAAGL,SAAEJ,EAAMU,SAGxD,ECHA,QAJA,SAAqBV,GACjB,OAAQC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASC,SAAA,CAAC,IAAEJ,EAAMW,UAC9C,E,2CCAA,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAfwBf,IAEhBC,EAAAA,EAAAA,MAAA,QAAMe,SAAUhB,EAAMiB,aAAab,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUV,KAAK,iBAAiBW,YAAY,qBAC1DC,SAAU,CAACC,EAAAA,EAAeX,QAElCP,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAS,gBCoCzB,QAzCA,SAAiBJ,GAEb,IAAIwB,EAAiBxB,EAAMyB,QAAQC,YAAYC,KAAIC,IAAUvB,EAAAA,EAAAA,KAACwB,EAAU,CAACnB,KAAMkB,EAAOlB,KAAsBD,GAAImB,EAAOnB,IAAtBmB,EAAOnB,MACpGqB,EAAkB9B,EAAMyB,QAAQM,aAAaJ,KAAIhB,IAAWN,EAAAA,EAAAA,KAAC2B,EAAW,CAACrB,QAASA,EAAQA,SAAcA,EAAQF,MASpH,OARqBT,EAAMyB,QAAQQ,gBAS/BhC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAUC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,SAC1BoB,KAELvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,CACtB0B,GACDzB,EAAAA,EAAAA,KAAC6B,EAAc,CAAClB,SAZPmB,IACjBnC,EAAMoC,YAAYD,EAAOF,eAAe,SAehD,E,wBCdA,SAAeI,E,QAAAA,KACXC,EAAAA,EAAAA,KAbmBC,IACZ,CACHd,QAASc,EAAMC,gBAGGC,IACf,CACHL,YAAcH,IAAqBQ,GAASC,EAAAA,EAAAA,GAAmBT,GAAgB,MAOnFU,EAAAA,EAFJ,CAGEC,E,2EClBF,IAAIC,EAA8BN,IAAK,CACnCO,OAAQP,EAAMQ,KAAKD,SAGhB,MAAMH,EAAoBK,IAMQV,EAAAA,EAAAA,IAAQO,EAARP,EALZtC,GAChBA,EAAM8C,QACJzC,EAAAA,EAAAA,KAAC2C,EAAS,IAAKhD,KADIK,EAAAA,EAAAA,KAAC4C,EAAAA,GAAQ,CAACzC,GAAI,Y","sources":["webpack://project1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/MessageItem.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"dialog\":\"Dialogs_dialog__htSTl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import { NavLink } from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\nfunction DialogItem(props) {\n    return (\n        <div className={s.dialog}>\n            <img src='https://i.pinimg.com/originals/cc/08/ce/cc08cef45d301724801afb9d02fe7d6d.jpg' />\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import { NavLink } from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\nfunction MessageItem(props) {\n    return (<div className={s.dialog}> {props.message}</div >)\n}\n\nexport default MessageItem;","import React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from '../../common/FormsControls/FormsControls';\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validators';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name=\"newMessageBody\" placeholder='Enter your message'\n                    validate={[requiredField, maxLength50]} />\n            </div>\n            <div>\n                <button >Send</button>\n            </div>\n        </form>\n\n    )\n}\n\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);","import { NavLink } from 'react-router-dom';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport MessageItem from './Message/MessageItem';\nimport React from 'react';\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\n\nimport { Field, reduxForm } from \"redux-form\";\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\n\nfunction Dialogs(props) {\n\n    let dialogsElement = props.dialogs.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\n    let messagesElement = props.dialogs.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\n    let newMessageBody = props.dialogs.newMessageBody;\n\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElement}\n            </div>\n            <div className={s.messages}>\n                {messagesElement}\n                <AddMessageForm onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\n// const AddMessageForm = (props) => {\n//     return (\n//         <form onSubmit={props.handleSubmit}>\n//             <div>\n//                 <Field component=\"textarea\" name=\"newMessageBody\" placeholder='Enter your message' />\n//             </div>\n//             <div>\n//                 <button >Send</button>\n//             </div>\n//         </form>\n\n//     )\n// }\n\n// const AddMessageFormRedax = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\n\nexport default Dialogs;","import React from 'react';\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => { dispatch(sendMessageCreator(newMessageBody)); }\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    let redirectComponent = (props) => {\n        if (!props.isAuth) return <Navigate to={'/login'} />\n        return <Component {...props} />\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(redirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n\n"],"names":["props","_jsxs","className","s","children","_jsx","src","NavLink","to","id","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","dialogsElement","dialogs","dialogsData","map","dialog","DialogItem","messagesElement","messagesData","MessageItem","newMessageBody","AddMessageForm","values","sendMessage","compose","connect","state","dialogsPage","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","Navigate"],"sourceRoot":""}