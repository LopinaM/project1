{"version":3,"file":"static/js/884.55ea8db8.chunk.js","mappings":"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","sources":["webpack://project1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://project1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.js","components/Profile/MyPosts/AddPostForm/AddPostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.module.css","webpack://project1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yucwS\"};","import s from './Post.module.css';\n\nfunction Post(props) {\n    return (\n        <div className={s.posts}>\n            <div className={s.item}>\n                <img src='https://cdn121.picsart.com/212677724003202.jpg' />\n                {props.message}\n                <div>\n                    <span>like</span>{props.likesCount}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, requiredField } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea} name=\"newPostText\" placeholder='Post message'\n                validate={[requiredField, maxLength10]} />\n            <div>\n                <button >Add Post</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({ form: \"ProfileAddNewPostForm\" })(AddPostForm);","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Posts/Post';\nimport { Field, reduxForm } from \"redux-form\";\nimport AddPostForm from './AddPostForm/AddPostForm';\n\nfunction MyPosts(props) {\n    // const MyPosts = React.memo(props => {\n    console.log(\"RENDER YO\");\n\n    let postsElement =\n        props.postData.map(post => <Post message={post.message} likesCount={post.likesCount} />);\n\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>my posts</h3>\n            <AddPostForm onSubmit={onAddPost} />\n            <div className={s.posts}>\n                {postsElement}\n            </div>\n        </div>\n    )\n}\n// );\n\nexport default MyPosts;\n\n\n","import React from 'react';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        postData: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)); }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"ProfileInfo_img__+4bLE\",\"descriphionBlock\":\"ProfileInfo_descriphionBlock__9oI37\",\"descriphionBlock2\":\"ProfileInfo_descriphionBlock2__exHYx\"};","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatus = (props) => {\n    const [moodEdit, setMoodEdit] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setMoodEdit(true);\n    }\n\n    const deactivateEditMode = () => {\n        setMoodEdit(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {moodEdit\n                ? (\n                    <div>\n                        <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} value={status} />\n                    </div>\n                )\n                : (\n                    <div>\n                        <span onDoubleClick={activateEditMode}>{status || \"-------\"}</span>\n                    </div>\n                )\n            }\n        </div>\n    );\n};\n\nexport default ProfileStatus;\n\n\n","import Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatus from './ProfileStatus';\n\nfunction ProfileInfo({ profile, status, updateStatus }) {\n    if (!profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div className={s.content}>\n            {/* <div>\n                <img src='https://cdn1.ozone.ru/s3/multimedia-0/6464071788.jpg' className={s.img} />\n            </div> */}\n            <div className={s.descriphionBlock}>\n                <div>\n                    <img src={profile.photos.large} />\n                </div>\n                <div className={s.descriphionBlock2}>\n                    {profile.fullName}\n                </div>\n                <div>\n                    {profile.aboutMe}\n                </div>\n                <ProfileStatus status={status} updateStatus={updateStatus} />\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\n\nfunction Profile(props) {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <MyPostsContainer />\n\n        </div>\n    )\n}\n\nexport default Profile;","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { setUserProfile } from '../../redux/profile-reducer';\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nexport function withRouter(Children) {\n    return (props) => {\n\n        const match = { params: useParams() };\n        return <Children {...props} match={match} />\n    }\n}\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        // if (!userId) {\n        //     userId = this.props.authorizedUserId;\n        // }\n\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            // if (!userId) {\n            //     this.props.history.push(\"/login\"); ////\n            // }\n        }\n\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n\n    render() {\n\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n\n\n\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    let redirectComponent = (props) => {\n        if (!props.isAuth) return <Navigate to={'/login'} />\n        return <Component {...props} />\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(redirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n\n"],"names":["props","_jsx","className","s","posts","children","_jsxs","item","src","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","console","log","postsElement","postData","map","post","Post","AddPostForm","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","moodEdit","setMoodEdit","useState","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","onDoubleClick","activateEditMode","_ref","profile","content","descriphionBlock","photos","large","descriphionBlock2","fullName","aboutMe","ProfileStatus","Preloader","ProfileInfo","MyPostsContainer","withRouter","Children","match","params","useParams","ProfileContainer","React","componentDidMount","userId","this","authorizedUserId","getUserProfile","getStatus","render","Profile","compose","auth","isAuth","withAuthRedirect","mapStateToPropsForRedirect","Component","Navigate","to"],"sourceRoot":""}